{{ $SERVER_VENDORS := list "DigitalOcean" "Linode" "Synology Inc." -}}
{{ $MACHINE_TYPES := list "workstation" "server" -}}

{{ $name := promptStringOnce . "name" "What is your name" -}}
{{ $email := promptStringOnce . "email" "What is your email address" -}}

{{ $machineType := "" -}}
{{ if and (eq .chezmoi.os "linux") (has (include "/sys/devices/virtual/dmi/id/sys_vendor" | trim) $SERVER_VENDORS) -}}
{{   $machineType = "server" -}}
{{ else -}}
{{   $machineType = promptChoiceOnce . "machineType" "What type of machine is this" $MACHINE_TYPES "server" -}}
{{ end -}}

{{ $isSynology := and (eq .chezmoi.os "linux") (eq (include "/sys/devices/virtual/dmi/id/sys_vendor" | trim) "Synology Inc.") -}}

{{ $chassisType := "desktop" -}}
{{ if eq .chezmoi.os "darwin" -}}
{{   if contains "MacBook" (output "system_profiler" "SPHardwareDataType") -}}
{{     $chassisType = "laptop" -}}
{{   else -}}
{{     $chassisType = "desktop" -}}
{{   end -}}
{{ else if and (eq .chezmoi.os "linux") $isSynology -}}
{{   $chassisType = "server" -}}
{{ else if eq .chezmoi.os "linux" -}}
{{   $chassisType = (output "hostnamectl" "--json=short" | mustFromJson).Chassis -}}
{{ else if eq .chezmoi.os "windows" -}}
{{   $chassisType = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "if ((Get-CimInstance -Class Win32_Battery | Measure-Object).Count -gt 0) { Write-Output 'laptop' } else { Write-Output 'desktop' }") | trim -}}
{{ end -}}

{{ if $isSynology -}}
{{   $tempDir := print .chezmoi.destDir "/.tmp" -}}
{{   if not (exec "mkdir" "-p" $tempDir) -}}
{{     fail "Failed to create temp directory" -}}
{{   end -}}
tempDir = {{ $tempDir | quote }}
{{ end -}}

{{ if $isSynology -}}
[diff]
pager = {{ if lookPath "less" }}"less"{{ else }}""{{ end }}
{{ end -}}

[data]
name = {{ $name | quote }}
email = {{ $email | quote }}

machineType = {{ $machineType | quote }}
chassisType = {{ $chassisType | quote }}

isServer = {{ eq $machineType "server" }}
isSynology = {{ $isSynology }}

[data.completions]
zsh = "{{ .chezmoi.destDir }}/.oh-my-zsh/custom/completions"
